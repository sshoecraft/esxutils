#!/usr/bin/perl -w
#
# Copyright (c) 2007 VMware, Inc.  All rights reserved.
#

use strict;
use warnings;

#use FindBin;
#use lib "$FindBin::Bin/../";
use lib '/usr/lib/vmware-vcli/apps';

use VMware::VIRuntime;
use XML::LibXML;
#use AppUtil::XMLInputUtil;
#use AppUtil::HostUtil;

$Util::script_version = "1.0";

my %opts = (
#   filename => {
#      type => "=s",
#      help => "The location of the input xml file",
#      required => 1,
#      default => "../sampledata/vmcreate.xml",
#   }
#   schema => {
#      type => "=s",
#      help => "The location of the schema file",
#      required => 0,
#      default => "../schema/vmcreate.xsd",
#   },
);

#Opts::add_options(%opts);
#Opts::parse();
#Opts::validate(\&validate);
#Opts::validate();

my $system = "usogpvpesx01";
my $vc = "txhous1vsphere1";
my $url = "https://$system/sdk/webService";
Util::connect($url,"root","k1n0bi!");

VIMRuntime::CreateVM("");
exit(0);

# Criteria:
# total_size = sum of disk sizes + ( mem size * 1.5 )
# free space on datastore + total size < ( total datastore size * .95 )

my $filename = "try.xml";

#my $ds = find_ds(%vmconf);
my $parser = XML::LibXML->new();
my $tree = $parser->parse_file($filename);
my $root = $tree->getDocumentElement;
my @vms = $root->findnodes('Virtual-Machine');

# Find all clusters with the subnet available
my $ds_path = "";
my $FileInfo = VirtualMachineFileInfo->new( logDirectory => undef, snapshotDirectory => undef, suspendDirectory => undef, vmPathName => $ds_path);

Util::disconnect();
exit(0);
